# ~/.dotfiles/zsh/.zsh_aliases



#----------------------------------------------------------------------------#
#  Explanation
#----------------------------------------------------------------------------#

# In these file are all aliases for command line tools.

# Mount it in .zshrc:
#if [ -f ~/.zsh_aliases ]; then
#    . ~/.zsh_aliases
#fi

# Load aliases immediatly:
#source ~/.zsh_aliases


#----------------------------------------------------------------------------#
#  Tmux
#----------------------------------------------------------------------------#

# Start Tmux:
alias tms='tmux'

# Quit Tmux:
alias tmq='tmux detach'

# List all sessions:
alias tml='tmux ls'

# Load session <session-name>:
alias tmls='tmux attach -t'

# Create new session <session-name>:
alias tmns='tmux new -s'

# Source .tmux.conf file:
alias tmsc='tmux source-file ~/.tmux.conf'

# List keys:
alias tmlk='tmux list-keys'



#-----------------------------------------------------------------------------
#  Git
#-----------------------------------------------------------------------------

#-----------------------------------------------------------
#- Working Tree

# Show status of repository (short version of 'git status'):
# A  : Added (file is in index)
# ?? : Untracked (unwatched file)
# M  : Changed (file is changed and in the staging area) (there is a space before M)
# M  : Unstaged (file is not in staging area) (there is a space behind M)
alias gs='git status -s'

# Show commit history:
alias gl="git log --graph --pretty=format:'%C(blue)%h%Creset - %C(magenta)%an%Creset - %C(yellow)%s%Creset - %C(green)%cr, %ad%Creset %C(blue)%d%Creset' --abbrev-commit --raw --date=format:'%a, %Y-%m-%d, %H:%M:%S'"

# Clone repository (add URL):
alias gc='git clone'


#-----------------------------------------------------------
#- Branches

# Pull from origin/main:
alias gpm='git pull origin main'

# Pull from origin/develop:
alias gpd='git pull origin develop'

# 'Show All' branches inclusively remote repository branches (quit with q):
alias gbsa='git branch -a'

# 'Show Local' branches (quit with q):
alias gbsl='git branch'

# 'Checkout Local' branch (add a local branch name):
alias gbcl='git checkout'

# 'Checkout Remote' branch (add remoteName/branchName):
alias gbcr='git checkout --track'

# Check out new branch (add name):
alias gbcn='git checkout -b'

# Delete branch locally (add a branch name):
alias gbdl='git checkout develop && git branch -D'

# Delete branch on remote repository (add remote branch-name):
alias gbdr='git push --delete'


#-----------------------------------------------------------
#- Index

# Stage file (add file or path):
alias gisf='git add'

# y (yes): Stage this hunk to be included in the next commit.
# n (no): Do not stage this hunk; leave it as is in the working directory.
# s (split): Split this hunk into smaller parts, allowing you to stage only specific lines or changes within the hunk.
# e (edit): Manually edit this hunk to remove or modify lines before staging.
# ? (help): Show the available options and their meanings.
# Stage parts of file (add file):
alias gisp='git add -p'

# Unstage file (add file or path):
alias giuf='git restore --staged'

# Unstage parts of file (add file):
alias giup='git restore -p'

# Stage all files:
alias gisa='git add .'

# Unstage all files:
alias giua='git restore --staged .'


#-----------------------------------------------------------
#- Commits

# Initial commit:
alias gci='git commit --allow-empty -m "INITIAL COMMIT"'

# Commit:
alias gcc='git commit'

# Commit with message:
alias gcm='git commit -m'

# Commit with message 'Work In Progress':
alias gcwip='git commit -m "WIP"'

# Change last commit (file/commit message) before push:
alias gccl='git commit --amend'

# Revert last commit (before push):
alias gcrl='git reset --hard HEAD~1'


#-----------------------------------------------------------
#- Comparing

# Compare files (add file):
alias gdf='git diff'


#-----------------------------------------------------------
#- Pushing/Pulling

# Pull actual branch from remote repository:
alias gpl='git pull'

# Fetch actual branch from remote repository:
alias gpf='git fetch'

# Pull actual branch from remote repository, than push:
alias gpp='git pull && git push'

# Revert last push (add commit hash):
alias gpr='git revert'


#-----------------------------------------------------------
#- Stashing

# Stash changes:
alias gsc='git stash'

# Pop stashed changes:
alias gsp='git stash pop'



#-----------------------------------------------------------------------------
#  Terminal
#-----------------------------------------------------------------------------

#-----------------------------------------------------------
#- Moving

# Jump up in directory structure:
alias ..='cd ..'
alias 2..='cd ../..'
alias 3..='cd ../../..'
alias 4..='cd ../../../..'
alias 5..='cd ../../../../..'
alias 6..='cd ../../../../../..'
alias 7..='cd ../../../../../../..'
alias 8..='cd ../../../../../../../..'
alias 9..='cd ../../../../../../../../..'

# Jump into .dotfiles directory:
alias cd.='cd ~/.dotfiles'

# Jump into GitHub directory:
alias cdgh='cd ~/Code/github'

# Jump into GitLab directory:
alias cdgl='cd ~/Code/gitlab'

# Jump into .ssh directory:
alias cdssh='cd ~/.ssh'

# Jump into desktop directory:
alias cddesk='cd ~/Desktop'

# Jump into documents directory:
alias cddocs='cd ~/Documents'

# Jump into downloads directory:
alias cddown='cd ~/Downloads'

# Jump into studies directory:
alias cdstud='cd ~/Documents/Private/studies'





#----------------------------------------------------------------------------#
#  Docker
#----------------------------------------------------------------------------#

#-------------------------------------#
#         Docker -> Standards         #
#-------------------------------------#

alias dlc='docker'
# List Docker commands.



#-------------------------------------#
#          Docker -> Compose          #
#-------------------------------------#

alias dcu='docker-compose up -d'
# Compose up.



#-------------------------------------#
#         Docker -> Containers        #
#-------------------------------------#

alias dcla='docker container ps -a -s'
# List all containers.


alias dcg='docker container start'
# Start container (go).


alias dcs='docker container stop'
# Stop container.


alias dcsa='docker container stop $(docker ps -a -q)'
# Stop all containers.


alias dcd='docker container rm -f'
# Delete container.


alias dcda='docker rm -f $(docker ps -a -q)'
# Delete all containers.


alias dcrl='docker exec -i -t'
# Root login container.


#-------------------------------------#
#           Docker -> Images          #
#-------------------------------------#

alias dila='docker images -a --format'
# List all images.


alias did='docker rmi -f'
# Delete an image.


alias dida='docker rmi -f $(docker images -a -q)'
# Delete all images.

#------------------------------------------------------------INSPECT

#-------------------------------------#
#          Docker -> Networks         #
#-------------------------------------#

alias dnlc='docker network'
# List network commands.


alias dnla='docker network ls'
# List all networks.


alias dni='docker network inspect'
# Inspect a network.


alias dnd='docker network rm -f'
# Delete a network.


alias d,dan='docker network prune'
# Delete all networks.



#-------------------------------------#
#           Docker -> Volumes         #
#-------------------------------------#

alias d,sdv='docker volume ls -q -f dangling=true'
# Show dangling volumes (volumes without containers).


alias d,ssofdv='du -h --max O admin:///var/lib/docker/volumes/$(docker volume ls -q -f dangling=true'
# Show size of dangling volumes.



# docker system prune -a
# Delete all stopped.







#---------------------------------------------------------------------------#
#                                  TERMINAL                                 #
#---------------------------------------------------------------------------#

# Create new file (nf):
alias nf='touch'

# Delete file (df):
alias df='rm'

# New directory (nd):
alias tnd='mkdir'

# Delete directory (dd):
alias dd='rm -rf'




#---------------------------------------------------------------------------#
#                                  COMPOSER                                 #
#---------------------------------------------------------------------------#



#---------------------------------------------------------------------------#
#                                  LARAVEL                                  #
#---------------------------------------------------------------------------#

#----------- Sail
# old --> alias sail='[ -f sail ] && bash sail || bash vendor/bin/sail'
#alias sail='[ -f sail ] && sh sail || sh vendor/bin/sail'
# Use 'sail' instead of './vendor/bin/sail':
alias sail='./vendor/bin/sail'

alias smfs='sail migrate:fresh --seed'
# Refresh database with project seeders.

alias scda='sail composer dump-autoload'

alias scu='sail composer update'





alias l,lc='php artisan'
# List commands.


alias l,seeddb='php artisan db:seed'
# Seed database with records.


alias l,st='php artisan tinker'
# Start Tinker CLI.


# laravel clockwork browser plugin anschauen!
# table plus sql oberfl√§che!



